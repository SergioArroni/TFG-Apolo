@startuml packages_Apolo
set namespaceSeparator none
package "ids" as ids {
}
package "ids.Apolo" as ids.Apolo {
}
package "ids.Apolo.layers" as ids.Apolo.layers {
}
package "ids.Apolo.layers.clustering" as ids.Apolo.layers.clustering {
}
package "ids.Apolo.layers.clustering.kmeans" as ids.Apolo.layers.clustering.kmeans {
}
package "ids.Apolo.layers.mab" as ids.Apolo.layers.mab {
}
package "ids.Apolo.layers.mab.mab" as ids.Apolo.layers.mab.mab {
}
package "ids.Apolo.layers.models" as ids.Apolo.layers.models {
}
package "ids.Apolo.layers.models.model" as ids.Apolo.layers.models.model {
}
package "ids.Apolo.main" as ids.Apolo.main {
}
package "ids.Apolo.model_predict" as ids.Apolo.model_predict {
}
package "ids.Apolo.model_predict.apolo_classifier" as ids.Apolo.model_predict.apolo_classifier {
}
package "ids.Apolo.model_train" as ids.Apolo.model_train {
}
package "ids.Apolo.model_train.apolo_trainer" as ids.Apolo.model_train.apolo_trainer {
}
package "ids.Apolo.preprocesing" as ids.Apolo.preprocesing {
}
package "ids.Apolo.preprocesing.clear_data" as ids.Apolo.preprocesing.clear_data {
}
package "ids.Apolo.preprocesing.data_preprocessing" as ids.Apolo.preprocesing.data_preprocessing {
}
package "ids.Apolo.preprocesing.transform" as ids.Apolo.preprocesing.transform {
}
package "ids.Apolo.services" as ids.Apolo.services {
}
package "ids.Apolo.services.influxdb_service" as ids.Apolo.services.influxdb_service {
}
package "ids.Apolo.services.redis_service" as ids.Apolo.services.redis_service {
}
package "ids.Apolo.storage" as ids.Apolo.storage {
}
package "ids.Apolo.storage.data_collector" as ids.Apolo.storage.data_collector {
}
package "ids.Apolo.storage.score_manager" as ids.Apolo.storage.score_manager {
}
package "ids.Apolo.utils" as ids.Apolo.utils {
}
package "ids.Apolo.utils.load" as ids.Apolo.utils.load {
}
package "ids.Apolo.utils.save" as ids.Apolo.utils.save {
}
package "ids.main" as ids.main {
}
ids.Apolo.layers --> ids.Apolo.layers.clustering
ids.Apolo.layers --> ids.Apolo.layers.mab
ids.Apolo.main --> ids.Apolo.layers
ids.Apolo.main --> ids.Apolo.utils
ids.Apolo.preprocesing --> ids.Apolo.preprocesing.clear_data
ids.Apolo.preprocesing --> ids.Apolo.preprocesing.data_preprocessing
ids.Apolo.preprocesing --> ids.Apolo.preprocesing.transform
ids.Apolo.utils --> ids.Apolo.utils.load
ids.Apolo.utils --> ids.Apolo.utils.save
@enduml
